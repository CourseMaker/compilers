#!/bin/bash
set -e

function get_argument() {
    if [[ -n "$2" ]] && [[ ${2:0:1} != "-" ]]; then
        echo "$2"
    else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
    fi
}

PARAMS=""
edition="standard"
while [[ $# -gt 0 ]]; do
    case "$1" in
        --build)
            build=1
            shift
            ;;
        --compilers)
            compilers="$(get_argument $1 $2)"
            shift 2
            ;;
        --edition)
            edition="$(get_argument $1 $2)"
            shift 2
            ;;
        --version)
            version="$(get_argument $1 $2)"
            shift 2
            ;;
        -*|--*)
            echo "Error: Unknown option $1" >&2
            echo "Usage: $0 [--build] [--compilers <language>,...] [--edition edition] [--version version] base_image"
            exit 1
            ;;
        *)
            PARAMS="$PARAMS $1"
            shift
            ;;
    esac
done

eval set -- "$PARAMS"

COMPILERS_DIR="compilers/$edition"

slim=0
if [[ "$compilers" == "all" ]]; then
    compilers="$(cd $COMPILERS_DIR; ls -d -- *)"
elif [[ "$compilers" == "" ]]; then
    slim=1
else
    compilers="${compilers//,/ }"
fi

for compiler in $compilers; do
    dockerfiles="$dockerfiles $COMPILERS_DIR/$compiler/Dockerfile"
done

base_image="$1"
dockerfile="# THIS DOCKERFILE WAS GENERATED BY JUDGE0 BUILD TOOL. DO NOT EDIT.\n\n"
if [[ -z "$base_image" ]]; then
    dockerfiles="dist/slim/Dockerfile.template $dockerfiles"
else
    dockerfile="$dockerfile\nFROM $base_image\n\n"
fi

for f in $dockerfiles; do
    if [[ ! -f $f ]]; then
        echo "File $f does not exist. Skipping."
        continue
    fi
    echo "Adding $f."
    dockerfile="$dockerfile$(cat $f)\n\n"
done

if [[ -z "$version" ]]; then
    version="$(git log -1 --format=%h --abbrev=8)"
fi

if [[ $slim -eq 1 ]]; then
    version="$version-slim"
elif [[ $edition != "standard" ]]; then
    version="$version-$edition"
fi

if [[ $slim -eq 1 ]]; then
    mkdir -p dist/slim
    file="dist/slim/Dockerfile"
else
    mkdir -p dist/$edition
    file="dist/$edition/Dockerfile"
fi

dockerfile=$dockerfile$(cat << EOF
RUN set -xe && \ \n\
    mkdir -p /cron /cron-log && \ \n\
    cat /cron/* | crontab -

COPY docker-entrypoint.sh /usr/local/bin/
ENTRYPOINT ["docker-entrypoint.sh"]

COPY $file /

LABEL version="$version"
LABEL maintainer="Herman Zvonimir Došilović <hermanz.dosilovic@gmail.com>"
EOF
)

echo -e "$dockerfile" > $file

image="judge0/api-base:$version"

build_command="docker build -t $image -f $file ."
echo "Generated new Dockerfile and saved it in $file."
echo
echo "    $build_command"
echo

if [[ $build -eq 1 ]]; then
    $build_command
fi
